fun{Transpose Semitones Partition}
   local
      C = {NewCell 0}
      FlatPartiton = {PartitionTimedList Partition}
      SemitonesList = [note(name:c octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:c octave:Octave sharp:true duration:1.0 instrument:none)
		       note(name:d octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:d octave:Octave sharp:true duration:1.0 instrument:none)
		       note(name:e octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:f octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:f octave:Octave sharp:true duration:1.0 instrument:none)
		       note(name:g octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:g octave:Octave sharp:true duration:1.0 instrument:none)
		       note(name:a octave:Octave sharp:false duration:1.0 instrument:none)
		       note(name:a octave:Octave sharp:true duration:1.0 instrument:none)
		       note(name:b octave:Octave sharp:false duration:1.0 instrument:none)]
      Index = {NewCell 0}

   in
      for E in FlatPartiton do
	 for F in SemitonesList do
	    C := @C+1
	    Index:={List.Nth SemitonesList ((@C+Semitones) mod 12)}
	    if E == F then
	       note(name:Index.name octave:E.octave+((@C+Semitones) / 12) sharp:Index.sharp duration:1.0 instrument:none)
	    end
	 end
      end
   end
end
